/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { GroupProps } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    mousepad: THREE.Mesh;
    ['01']: THREE.Mesh;
    ['01_1']: THREE.Mesh;
    ['01_2']: THREE.Mesh;
    ['trash-bin']: THREE.Mesh;
    ['desk-board']: THREE.Mesh;
    ['desk-led']: THREE.Mesh;
    ['desk-leg']: THREE.Mesh;
    ['desk-controller']: THREE.Mesh;
    ['keyboard-frame']: THREE.Mesh;
    ['keyboard-key001']: THREE.Mesh;
    ['keyboard-key']: THREE.Mesh;
    touchpad: THREE.Mesh;
    ['monitor-27inch-left']: THREE.Mesh;
    ['monitor-27inch-right']: THREE.Mesh;
    ['monitor-screen']: THREE.Mesh;
    ['trolley-pipe']: THREE.Mesh;
    ['trolly-item']: THREE.Mesh;
    ['craft-desk']: THREE.Mesh;
    Cylinder: THREE.Mesh;
    ['craft-mouse-pad']: THREE.Mesh;
    ['trolley-pipe001']: THREE.Mesh;
    ['trolly-item001']: THREE.Mesh;
    shelf: THREE.Mesh;
    Cube: THREE.Mesh;
    Cube001: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cube003: THREE.Mesh;
    Cube004: THREE.Mesh;
    Cube005: THREE.Mesh;
    Cube006: THREE.Mesh;
    Cube007: THREE.Mesh;
    Cube008: THREE.Mesh;
    NurbsPath008: THREE.Mesh;
    NurbsPath009: THREE.Mesh;
    NurbsPath010: THREE.Mesh;
    NurbsPath011: THREE.Mesh;
    NurbsPath012: THREE.Mesh;
    NurbsPath013: THREE.Mesh;
    NurbsPath014: THREE.Mesh;
    NurbsPath015: THREE.Mesh;
    Vert002: THREE.Mesh;
    floor: THREE.Mesh;
    walls: THREE.Mesh;
    Cube011: THREE.Mesh;
    Cube011_1: THREE.Mesh;
    ['wall-trim-top']: THREE.Mesh;
    ['wall-trim-bottom']: THREE.Mesh;
    rack: THREE.Mesh;
    rack001: THREE.Mesh;
    chair: THREE.Mesh;
    ['3d-printer-shelf']: THREE.Mesh;
    ['frame-1']: THREE.Mesh;
    ['frame-2']: THREE.Mesh;
    ['mbp-keyboard']: THREE.Mesh;
    Plane002: THREE.Mesh;
    Plane002_1: THREE.Mesh;
    ['no-man-sky']: THREE.Mesh;
    akira: THREE.Mesh;
  };
  materials: {
    ['mousepad-black']: THREE.MeshStandardMaterial;
    ['00 1']: THREE.MeshStandardMaterial;
    ['00 2']: THREE.MeshStandardMaterial;
    ['01']: THREE.MeshStandardMaterial;
    ['monitor-material']: THREE.MeshStandardMaterial;
    ['desktop-material']: THREE.MeshStandardMaterial;
    ['led-strip']: THREE.MeshStandardMaterial;
    ['keyboard-material']: THREE.MeshStandardMaterial;
    ['bed-material']: THREE.MeshStandardMaterial;
    ['white-plastic']: THREE.MeshStandardMaterial;
    ['gray-safa']: THREE.MeshStandardMaterial;
    ['plant-green']: THREE.MeshStandardMaterial;
    ['pot-gray']: THREE.MeshStandardMaterial;
    ['gray-mat-material']: THREE.MeshStandardMaterial;
    ['wall-material']: THREE.MeshStandardMaterial;
    ['window-frame']: THREE.MeshStandardMaterial;
    ['window-panel']: THREE.MeshStandardMaterial;
    ['white-plastic.001']: THREE.MeshStandardMaterial;
    ['gray-aluminum']: THREE.MeshStandardMaterial;
    ['no-man-sky']: THREE.MeshStandardMaterial;
    akira: THREE.MeshStandardMaterial;
  };
};

export default function Model(rest: GroupProps) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF('https://raw.githubusercontent.com/f1982/planet-of-images/main/img/my-room-v0.69.gltf') as GLTFResult;
  return (
    <group ref={group} {...rest} dispose={null}>
      <mesh
        geometry={nodes.mousepad.geometry}
        material={materials['mousepad-black']}
        position={[0.02729, 0.87477, 2.03224]}
      />
      <group position={[1.08747, 0.1144, 2.00337]} scale={0.14605}>
        <mesh geometry={nodes['01'].geometry} material={materials['00 1']} />
        <mesh geometry={nodes['01_1'].geometry} material={materials['00 2']} />
        <mesh geometry={nodes['01_2'].geometry} material={materials['01']} />
      </group>
      <mesh
        geometry={nodes['trash-bin'].geometry}
        material={materials['monitor-material']}
        position={[-0.87978, 0.2644, 2.05209]}
        scale={[0.1, 0.15, 0.1]}
      />
      <mesh
        geometry={nodes['desk-board'].geometry}
        material={materials['desktop-material']}
        position={[-0.18691, 0.85714, 2.09917]}
      />
      <mesh
        geometry={nodes['desk-led'].geometry}
        material={materials['led-strip']}
        position={[-0.18691, 0.85714, 2.50176]}
        rotation={[-Math.PI / 6, 0, 0]}
        scale={[1, 0.68176, 1]}
      />
      <mesh
        geometry={nodes['desk-leg'].geometry}
        material={materials['monitor-material']}
        position={[-1.10353, 0.53535, 2.09817]}
        scale={[0.035, 0.3, 0.29]}
      />
      <mesh
        geometry={nodes['desk-controller'].geometry}
        material={materials['monitor-material']}
        position={[0.61948, 0.82634, 1.71663]}
        scale={[0.05, 0.015, 0.015]}
      />
      <mesh
        geometry={nodes['keyboard-frame'].geometry}
        material={materials['keyboard-material']}
        position={[0.01526, 0.87977, 1.95455]}
        scale={[0.15, 0.005, 0.05]}
      />
      <mesh
        geometry={nodes['keyboard-key001'].geometry}
        material={materials['monitor-material']}
        position={[0.14505, 0.89005, 1.98675]}
        rotation={[-0.0661, 0, 0]}
        scale={[7.5, 1, 7.5]}
      />
      <mesh
        geometry={nodes['keyboard-key'].geometry}
        material={materials['monitor-material']}
        position={[-0.77694, 1.09315, 2.01718]}
        rotation={[-Math.PI, 0.48671, -Math.PI]}
        scale={[7.5, 1, 7.5]}
      />
      <mesh
        geometry={nodes.touchpad.geometry}
        material={materials['keyboard-material']}
        position={[-0.63453, 1.10315, 2.01898]}
        rotation={[-Math.PI, 0.48671, -Math.PI]}
      />
      <mesh
        geometry={nodes['monitor-27inch-left'].geometry}
        material={materials['monitor-material']}
        position={[0.34672, 1.19238, 2.31806]}
        rotation={[0, 0.17888, 0]}
        scale={[300, 165, 10]}
      />
      <mesh
        geometry={nodes['monitor-27inch-right'].geometry}
        material={materials['monitor-material']}
        position={[-0.26272, 1.19238, 2.31806]}
        rotation={[0, -0.18254, 0]}
        scale={[300.00003, 165, 10]}
      />
      <mesh
        geometry={nodes['monitor-screen'].geometry}
        material={materials['monitor-material']}
        position={[0.04817, 1.59844, 2.33209]}
        scale={[0.4, 0.175, 0.01]}
      />
      <mesh
        geometry={nodes['trolley-pipe'].geometry}
        material={materials['monitor-material']}
        position={[-1.51075, 0.4446, 1.94529]}
        rotation={[0, 1.57053, 0]}
      />
      <mesh
        geometry={nodes['trolly-item'].geometry}
        material={materials['monitor-material']}
        position={[-1.51075, 0.77553, 2.05816]}
        rotation={[0, 1.57053, 0]}
        scale={[180, 50, 150]}
      />
      <mesh
        geometry={nodes['craft-desk'].geometry}
        material={materials['desktop-material']}
        position={[-2.15093, 0.83272, 0.66117]}
      />
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials['monitor-material']}
        position={[-1.88512, 0.46074, -0.01189]}
        scale={[0.02818, 0.325, 0.02818]}
      />
      <mesh
        geometry={nodes['craft-mouse-pad'].geometry}
        material={materials['bed-material']}
        position={[-2.12683, 0.83272, 0.70358]}
        rotation={[Math.PI, 1.57053, 0]}
        scale={[0.4, 0.025, 0.3]}
      />
      <mesh
        geometry={nodes['trolley-pipe001'].geometry}
        material={materials['white-plastic']}
        position={[-2.29621, 0.44455, -0.44509]}
        rotation={[Math.PI, 0, Math.PI]}
      />
      <mesh
        geometry={nodes['trolly-item001'].geometry}
        material={materials['white-plastic']}
        position={[-2.18334, 0.77547, -0.44509]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={[180, 50, 150]}
      />
      <mesh
        geometry={nodes.shelf.geometry}
        material={materials['white-plastic']}
        position={[0.13221, 0.36071, -0.73709]}
        rotation={[0, 0, Math.PI]}
        scale={[0.15, 0.25, 0.125]}
      />
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials['gray-safa']}
        position={[-1.27312, 0.43768, -0.72469]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[296.70862, 90, 350]}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={materials['gray-safa']}
        position={[-1.27312, 0.63242, -1.09346]}
        rotation={[-Math.PI / 2, Math.PI / 2, 0]}
        scale={[239.99998, 90, 350]}
      />
      <mesh
        geometry={nodes.Cube002.geometry}
        material={materials['gray-safa']}
        position={[-0.5765, 0.43768, -0.72469]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[296.70862, 90, 350]}
      />
      <mesh
        geometry={nodes.Cube003.geometry}
        material={materials['gray-safa']}
        position={[-1.27312, 0.22933, -0.77075]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[396.07202, 112.57382, 350]}
      />
      <mesh
        geometry={nodes.Cube004.geometry}
        material={materials['gray-safa']}
        position={[-0.5765, 0.22933, -0.77076]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[396.07202, 112.57382, 350]}
      />
      <mesh
        geometry={nodes.Cube005.geometry}
        material={materials['gray-safa']}
        position={[-0.89993, 0.42347, -1.20502]}
        rotation={[-Math.PI / 2, 1.57055, 0]}
        scale={[337.18115, 112.57382, 754.75232]}
      />
      <mesh
        geometry={nodes.Cube006.geometry}
        material={materials['gray-safa']}
        position={[-0.15126, 0.39983, -0.86794]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[439.37866, 112.57382, 272.4505]}
      />
      <mesh
        geometry={nodes.Cube007.geometry}
        material={materials['gray-safa']}
        position={[-1.71299, 0.39983, -0.86794]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[383.2522, 112.57382, 272.4505]}
      />
      <mesh
        geometry={nodes.Cube008.geometry}
        material={materials['gray-safa']}
        position={[-0.5765, 0.63242, -1.09346]}
        rotation={[-Math.PI / 2, Math.PI / 2, 0]}
        scale={[239.99998, 90, 350]}
      />
      <mesh
        geometry={nodes.NurbsPath008.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.NurbsPath009.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.NurbsPath010.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.NurbsPath011.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.NurbsPath012.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.NurbsPath013.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.NurbsPath014.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.NurbsPath015.geometry}
        material={materials['plant-green']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.Vert002.geometry}
        material={materials['pot-gray']}
        position={[0.0294, 0.57806, -0.92011]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1246}
      />
      <mesh
        geometry={nodes.floor.geometry}
        material={materials['gray-mat-material']}
        position={[0, -0.8856, -0.10851]}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={[2.7, 1, 2.7]}
      />
      <mesh
        geometry={nodes.walls.geometry}
        material={materials['wall-material']}
        position={[0, 1, 0]}
        rotation={[0, 0, Math.PI]}
        scale={[2.7, 1, 2.7]}
      />
      <group
        position={[-2.59006, 1.49592, 0.55281]}
        rotation={[0, 0, Math.PI]}
        scale={[0.1, 0.55, 1.05]}
      >
        <mesh
          geometry={nodes.Cube011.geometry}
          material={materials['window-frame']}
        />
        <mesh
          geometry={nodes.Cube011_1.geometry}
          material={materials['window-panel']}
        />
      </group>
      <mesh
        geometry={nodes['wall-trim-top'].geometry}
        material={materials['monitor-material']}
        position={[0, 1, 0]}
        rotation={[0, 0, Math.PI]}
        scale={[2.7, 1, 2.7]}
      />
      <mesh
        geometry={nodes['wall-trim-bottom'].geometry}
        material={materials['mousepad-black']}
        position={[0, -1.70413, 0]}
        rotation={[0, 0, Math.PI]}
        scale={[2.7, 1, 2.7]}
      />
      <mesh
        geometry={nodes.rack.geometry}
        material={materials['mousepad-black']}
        position={[-2.00419, 2.41843, 2.51727]}
        scale={[0.5, 0.025, 0.1]}
      />
      <mesh
        geometry={nodes.rack001.geometry}
        material={materials['mousepad-black']}
        position={[-1.70357, 1.93052, 2.51727]}
        scale={[0.5, 0.025, 0.1]}
      />
      <mesh
        geometry={nodes.chair.geometry}
        material={materials['keyboard-material']}
        position={[-0.06343, 0.55249, 1.28484]}
        scale={[0.21418, 0.0306, 0.21418]}
      />
      <mesh
        geometry={nodes['3d-printer-shelf'].geometry}
        material={materials['desktop-material']}
        position={[-2.21497, 0.36071, 2.26891]}
        rotation={[0, 0, Math.PI]}
        scale={[0.3, 0.25, 0.25]}
      />
      <mesh
        geometry={nodes['frame-1'].geometry}
        material={materials['white-plastic']}
        position={[0.79765, 1.87424, 0.39315]}
      />
      <mesh
        geometry={nodes['frame-2'].geometry}
        material={materials['white-plastic.001']}
        position={[-0.46511, 1.87424, 0.39315]}
      />
      <mesh
        geometry={nodes['mbp-keyboard'].geometry}
        material={materials['gray-aluminum']}
        position={[-0.66263, 1.0833, 2.0732]}
        rotation={[-Math.PI, 0.48671, -Math.PI]}
        scale={[170, 1, 119.99999]}
      />
      <group
        position={[-0.72523, 1.20359, 2.19227]}
        rotation={[-1.46975, -0.05333, 2.65758]}
        scale={[170, 0.60933, 119.99999]}
      >
        <mesh
          geometry={nodes.Plane002.geometry}
          material={materials['gray-aluminum']}
        />
        <mesh
          geometry={nodes.Plane002_1.geometry}
          material={materials['monitor-material']}
        />
      </group>
      <mesh
        geometry={nodes['no-man-sky'].geometry}
        material={materials['no-man-sky']}
        position={[-0.64388, 2.02849, 2.57024]}
        rotation={[Math.PI / 2, 0, Math.PI]}
      />
      <mesh
        geometry={nodes.akira.geometry}
        material={materials.akira}
        position={[0.6174, 2.02585, 2.5688]}
        rotation={[Math.PI / 2, 0, Math.PI]}
      />
    </group>
  );
}

useGLTF.preload('https://raw.githubusercontent.com/f1982/planet-of-images/main/img/my-room-v0.69.gltf');
