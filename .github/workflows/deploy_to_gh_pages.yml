# https://github.com/gregrickaby/nextjs-github-pages/blob/main/.github/workflows/deploy.yml

name: GitHub Pages deployment

on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # We need to specify what environment to use for environment secrets
    # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#environment-secrets
    environment: github-pages
    env:
      # Set env variables to actions secrets
      NEXT_PUBLIC_APP_GA_ID: ${{secrets.NEXT_PUBLIC_APP_GA_ID}}
      NEXT_PUBLIC_APP_GAD: ${{secrets.NEXT_PUBLIC_APP_GAD}}
      NEXT_PUBLIC_APP_GAD_ID: ${{secrets.NEXT_PUBLIC_APP_GAD_ID}}
      NEXT_PUBLIC_APP_SITE_URL: ${{secrets.NEXT_PUBLIC_APP_SITE_URL}}
      NEXT_PUBLIC_APP_VERSION: ${{secrets.NEXT_PUBLIC_APP_VERSION}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup nodes
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Run unit tests
        run: ${{ steps.detect-package-manager.outputs.manager }} run test

      - name: Build the website
        # Place a .nojekyll file in the /public directory to disable GitHub Pages from trying to create a Jekyll website.
        run: touch ./out/.nojekyll
        # This below is used to build storybook static site with whole site together
        # run: touch ./out/.nojekyll

      - name: Deploy webpages to GitHub pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: out # The folder the action should deploy.

